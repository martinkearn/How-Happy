@model HowHappy_Web.ViewModels.ResultViewModel
@{
    ViewData["Title"] = "How is everyone feeling?";
    ViewData["ThemeColour"] = Model.ThemeColour;
    ViewData["FAEmotionClass"] = Model.FAEmotionClass;
}

@section navbar{
    <li id="resultTitle">
        <span>How</span> 
        <form asp-action="Result" enctype="multipart/form-data" id="emotionSelect">
            <select asp-for="Emotion" asp-items="@Model.Emotions" onchange="this.form.submit()"></select>
        </form>
        <span>?</span> 
    </li>
}

<div class="row">
    <div class="col-md-12">
        <h1>Who has the most @Model.Emotion?</h1>
        <h4>We found <strong>@Model.Faces.Count</strong> faces</h4>
        <i id="spinner" class="fa fa-circle-o-notch fa-spin fa-5x"></i>
        <div id="cont">
            <div id="draggable">
                <img src="@Model.ImagePath" alt="A photo of faces" />
                @foreach (var face in Model.Faces)
                {
                    <style type="text/css">
                        #rect-@Model.Faces.IndexOf(face)
                        {
                            left:@(string.Format(face.faceRectangle.left + "px;"));
                            top:@(string.Format(face.faceRectangle.top + "px;"));
                            width:@(string.Format(face.faceRectangle.width + "px;"));
                            height:@(string.Format(face.faceRectangle.height + "px;"));
                        }

                        #rank-@Model.Faces.IndexOf(face)
                        {
                            left:@(string.Format(face.faceRectangle.left + "px;"));
                            top:@(string.Format((face.faceRectangle.top - 35) + "px;"));
                        }

                        #detail-@Model.Faces.IndexOf(face)
                        {
                            left:@(string.Format(face.faceRectangle.left + face.faceRectangle.width + "px;"));
                            top:@(string.Format((face.faceRectangle.top) + "px;"));
                        }

                        .rect {
                            border-color: #@Model.ThemeColour;
                        }

                        .rank {
                            color: #@Model.ThemeColour;
                        }

                        .popover-title {
                            background-color: #@Model.ThemeColour;
                        }
                    </style>
                    <div id="rect-@Model.Faces.IndexOf(face)" class="rect" data-toggle="popover" data-html="true" data-trigger="click" title="How is #@(Model.Faces.IndexOf(face)+1) feeling?" data-content="Happiness: @face.scores.happinessDisplay<br>Fear: @face.scores.fearDisplay<br>Anger: @face.scores.angerDisplay<br>Contempt: @face.scores.contemptDisplay<br>Disgust: @face.scores.disgustDisplay<br>Neutral: @face.scores.neutralDisplay<br>Sadness: @face.scores.sadnessDisplay<br>Surprise: @face.scores.surpriseDisplay"></div>
                    <div id="rank-@Model.Faces.IndexOf(face)" class="rank">#@(Model.Faces.IndexOf(face) + 1)</div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
        $(function () {
            //TO DO: something that only enables this if the image is bigger than the viewport
            $("#draggable").draggable({
                cursor: "move",
                scroll: true
            });
        });

        $(document).ready(function () {
            resizeDiv();
            $('#spinner').css({ 'display': 'none' });
        });

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })

        $(function () {
            $('[data-toggle="popover"]').popover()
        })

        window.onresize = function (event) {
            resizeDiv();
        }

        function resizeDiv() {
            vpw = $(window).width();
            vph = $(window).height();
            $('#cont').css({ 'height': vph - 170 + 'px' });
            $('#cont').css({ 'width': vpw - 50 + 'px' });
        }

    </script>
}





